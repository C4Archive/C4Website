title: Every Letter Every Font
-
synopsis: This example combines arrays, strings and fonts to continuously draw every letter of the alphabet using every font on your computer.
-
shortsynopsis: literally, every letter in every font (on your comp)
-
discussion: This is a further discussion about the example
-
content:<script type="syntaxhighlighter" class="brush: objc"><![CDATA[
#import "CFACanvas.h"

int fontCount, currentFont, characterIndex, size;
NSPoint point;
NSSize backgroundRectSize;
NSArray *fontArray, *characterArray;
CFAString *description, *character;

@implementation CFACanvas

-(void)setup {
    [self drawStyle:DISPLAYRATE];
    [self windowWidth:[self screenWidth]-30 andHeight:[self screenHeight]-60];
    [self background:1];
    fontArray = [CFAFont availableFonts];
    fontCount = [fontArray count];
    currentFont = 0;
    
    size = 18;
    characterArray = [[[NSArray alloc] initWithArray:
                       [[CFAString stringWithString:
                         @"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z"]
                        componentsSeparatedByString:@","]] retain];
    characterIndex = 0;
    character = [[CFAString stringWithString:[characterArray objectAtIndex:characterIndex]] retain];
    
    [CFAShape noStroke];
    [description font:[CFAFont fontWithFont:[CFAFont userFontOfSize:12]]];
    
    point = NSMakePoint(size, size*2);
}

-(void)draw {
    [CFAShape fill:0.2];
    [CFAShape rectWithXPos:0 yPos:0 width:self.canvasWidth andHeight:26];
    
    description = [CFAString stringWithFormat:@"current font: %@ (%d/%d)",
                   [fontArray objectAtIndex:currentFont], 
                   currentFont, 
                   fontCount];
    [description fill:1];
    [description drawAtPoint:NSMakePoint(10, 6)];
    
    [CFAShape fill:1];
    [CFAShape rectAt:point size:backgroundRectSize];
    [character font:[CFAFont fontWithName:[fontArray objectAtIndex:currentFont] size:size]];
    [character drawAtPoint:point];
    
    point.x += [character size].width;
    if (point.x + [character size].width >= self.canvasWidth-size) {
        point.x = size;
        point.y += size;
        if(point.y >= self.canvasHeight-size) {
            point.y = size*2;
        }
    }
    
    currentFont++;
    
    if(currentFont >= fontCount) {
        currentFont = 0;
        characterIndex++;
        if(characterIndex == [characterArray count]) characterIndex = 0;
        character = [[CFAString stringWithString:[characterArray objectAtIndex:characterIndex]] retain];
        [character fillRed:FLOAT_FROM_255([CFAMath randomInt:255]) 
                     green:FLOAT_FROM_255([CFAMath randomInt:255]) 
                      blue:FLOAT_FROM_255([CFAMath randomInt:255])];
    }
}
@end]]></script>