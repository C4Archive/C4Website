title: Object Arrays
-
synopsis:This example shows how to work with NSArrays

The NSArray stores lists of objects...

Objects can be of any kind (class)...

So, NSArray is quite flexible and very very useful
-
shortsynopsis: shows how to use Cocoa's object arrays
-
discussion: This is a further discussion about the example
-
content:<script type="syntaxhighlighter" class="brush: objc"><![CDATA[
#import "CFACanvas.h"
@implementation CFACanvas
-(void)setup {
    [self windowWidth:400 andHeight:320];
}

-(void)draw {
    //Let's create a bunch of objects
    CFAColor *c = [CFAColor colorWithGrey:.66];
    CFAFont *f = [CFAFont fontWithName:@"Arial" size:20];
    CFAImage *i = [CFAImage imageName:@"C4Red.png"];
    CFAString *s = [CFAString stringWithString:@"a string"];
    CFAVoice *v	= [CFAVoice initWithVoice:ALEX];
    CFAVector *vec = [CFAVector vectorWithX:0 Y:1 Z:0];
    CFAObject *o = [[[CFAObject alloc] init] retain];
    
    NSArray *array0, *array1, *array2;
    
    CFALog(@"Create an array with one object");
    array0 = [NSArray arrayWithObject:c];
    CFALog(@"%@",array0);
    
    CFALog(@"Create an array with multiple objects");
    array1 = [NSArray arrayWithObjects:c,f,i,s,v,vec,o,nil];
    CFALog(@"%@",array1);
    
    CFALog(@"Create an array with object from another array");
    array2 = [NSArray arrayWithArray:array1];
    CFALog(@"%@",array2);
    
    NSPoint p = NSMakePoint(20, self.canvasHeight-32);
    [CFAString fill:1];
    [[CFAString stringWithString:@"The Array"] drawAtPoint:p];
    p.y -= 172;
    [[CFAString stringWithFormat:@"%@",array2] drawAtPoint:p];
    
}
@end]]></script>