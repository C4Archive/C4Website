title: Pointilism
-
synopsis: This example creates a pointilist-style visualization by using the colorAt: method to grab pixel colors from an image
-
shortsynopsis: pointilist-style visualization by grabbing pixel colors
-
discussion: This is a further discussion about the example
-
content:<script type="syntaxhighlighter" class="brush: objc"><![CDATA[
#import "CFACanvas.h"

CFAImage *myImage;

@implementation CFACanvas
-(void)setup {
    //Usually you should set up your canvas first
    //But, since we use the image dimensions to set the canvas size, we should create the image first...
    myImage = [CFAImage imageName:@"C4Sky.png"];
    
    [self windowWidth:myImage.imageWidth andHeight:myImage.imageHeight];
    [self drawStyle:DISPLAYRATE];
    [self background:1.0f];
    
    [myImage loadPixelData];
    
    [CFAShape strokeWidth:1];
    [CFAShape stroke:1];
}

-(void)draw {
    int x = [CFAMath randomInt:self.canvasWidth];
    int y = [CFAMath randomInt:self.canvasHeight];
    CFAColor *color = [myImage colorAtX:x andY:y];
    float pointilize = [CFAMath map:mousePos.x fromMin:0 max:self.canvasWidth toMin:2 max:18];
    [CFAShape fillColor:color];
    [CFAShape circleAt:NSMakePoint(x, y) radius:pointilize];
}
@end]]></script>